events {
    worker_connections 1024;
}

http {
    upstream flask_backend {
        least_conn;  # Use least connections load balancing
        
        # Docker Compose will create instances named:
        # flask-musescore-1, flask-musescore-2, etc.
        server flask-musescore:8129 max_fails=3 fail_timeout=30s;
    }

    server {
        listen 80;
        client_max_body_size 100M;  # Adjust based on your MIDI file sizes

        location / {
            proxy_pass http://flask_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeout settings for long conversions
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Health check endpoint for nginx
        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}